# ##############################################################
# Configuration sub model provider configuration file
# ##############################################################



# ##############################################################
# Sub model provider configuration

# Name of provided sub model
basyx.submodelID       = sampleCFG



# ##############################################################
# Sub model meta data

# Sub model semantics type - supported type values are irdi, internal
# - This value must be set if the basyx.* properties are to be parsed. If unsure, use "internal"
basyx.submodelSemantics = custom

# Type of sub model ID (IdentifierType.IRDI, IdentifierType.URI, IdentifierType.Custom) 
basyx.idType            = IdentifierType.Custom

# Sub model ID according to idType
basyx.id                = basys.components.testsuite.cfgTestSubModel

# Short ID of the sub model (e.g. "subsystemTopology")
basyx.idShort           = CfgFileTestAAS

# Additional coded meta information regarding the element type that affects expected existence of attributes (e.g. "transportSystemTopology")
basyx.category          = basys.components.tests.regression

# Descriptive sub model description (e.g. "This is a machine readable description of the transport system topology")
basyx.description       = BaSys regression test file for CFG file provider

# The qualifier of this sub model (e.g. "plant.maintransport")
basyx.qualifier         = basys.components.regression

# The qualifier type of the above qualifier (e.g. plant.transportDescription)
basyx.qualifier.type 	= basysQualifier

# Sub model version
basyx.version           = 1.0

# Sub model revision
basyx.revision          = 2



# ##############################################################
# Exported configuration


# List of exported properties
properties                     = cfgProperty1,cfgProperty2,cfgProperty3


# Export property "cfgProperty1" and its meta data
cfgProperty1                   = exampleStringValue
cfgProperty1.type              = Property
cfgProperty1.semanticsInternal = basys.semantics.internal.cfgProperty1
cfgProperty1.qualifier         = basys.test.scope
cfgProperty1.qualifier.type    = basysQualifier
cfgProperty1.description 	   = Configuration property description


# Export property "cfgProperty2" and its meta data
cfgProperty2                   = 12
cfgProperty2.type              = Property
cfgProperty2.semanticsInternal = basys.semantics.internal.cfgProperty2
cfgProperty2.description 	   = Configuration property description \
									on multiple lines

# Export property "cfgProperty3" and its meta data
cfgProperty3                   = 45.8
cfgProperty3.type              = Property

